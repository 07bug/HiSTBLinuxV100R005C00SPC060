LOCAL_PATH := $(my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := pkg_gst_validate

#EXT_TYPE_GZ := tar.gz
EXT_TYPE_XZ := tar.xz
PKG_GST_VALIDATE_NAME := gst-validate-1.10.4


LOCAL_INTERMEDIATE_TARGETS := $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE) \
	$(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_prepare \
	$(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_configure \
	$(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_make \
	$(LOCAL_MODULE)-clean

PRIVATE_PKG_GST_VALIDATE_NAME_PREPARE := $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_prepare
PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE := $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_configure
PRIVATE_PKG_GST_VALIDATE_NAME_MAKE := $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_make
PRIVATE_PKG_GST_VALIDATE_NAME_INSTALL := $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)_install
ifeq ($(ENV_SME_VERSION_TYPE), rls)
$(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE): PRIVATE_PKG_GST_VALIDATE_DBG_FLG := --disable-debug
else
$(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE): PRIVATE_PKG_GST_VALIDATE_DBG_FLG := --enable-debug
endif

PRIVATE_PKG_GST_VALIDATE_DEPS := pkg_gst_core-deps

$(LOCAL_MODULE)-deps: $(PRIVATE_PKG_GST_VALIDATE_DEPS) $(LOCAL_MODULE)

$(LOCAL_MODULE): $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE)

$(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/.$(LOCAL_MODULE):$(PRIVATE_PKG_GST_VALIDATE_NAME_INSTALL)

$(PRIVATE_PKG_GST_VALIDATE_NAME_INSTALL):$(PRIVATE_PKG_GST_VALIDATE_NAME_MAKE)
	$(NS)echo "begin INSTALL $(PKG_GST_VALIDATE_NAME)!"
	cp -af $(THIRDPARTY_OBJ_DIR)/lib/libgstvalidate-*so* $(TARGET_OUT_LIB_DIR)/
	cp -af $(THIRDPARTY_OBJ_DIR)/lib/gstreamer-1.0/libgstvalidate*.so* $(TARGET_OUT_PLUGIN_DIR)/
	cp -af $(THIRDPARTY_OBJ_DIR)/bin/gst-validate-1.0 $(TARGET_OUT_BIN_DIR)/
	cp -af $(THIRDPARTY_OBJ_DIR)/bin/gst-validate-launcher $(TARGET_OUT_BIN_DIR)/
	cp -rf $(THIRDPARTY_OBJ_DIR)/share/gstreamer-1.0/validate/scenarios/ $(TARGET_OUT_CONFIG_DIR)/
ifeq ($(STRIP_IN_RELEASE_VERSION), y)
	#$(TARGET_STRIP) $(TARGET_OUT_LIB_DIR)/libgstallocators-1.0.so
endif
	$(NS)echo "end INSTALL $(PKG_GST_VALIDATE_NAME)!"

$(PRIVATE_PKG_GST_VALIDATE_NAME_MAKE):$(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE)
	$(NS)echo "begin make $(PKG_GST_VALIDATE_NAME)!"
	make -C $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME) $(MAKE_PARALLEL)
	make -C $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME) install $(MAKE_PARALLEL)
	$(NS)echo "end make $(PKG_GST_VALIDATE_NAME)!"

PRIVATE_PKG_GST_VALIDATE_CFLAGS :=
PRIVATE_PKG_GST_VALIDATE_CXXFLAGS :=

ifeq ($(CFG_ENABLE_NDK), y)
GST_VALIDATE_LDFLAGS:=$(OPENSOURCE_LDFLAGS) -L$(CFG_COMPILE_SYSROOT)/usr/lib -L$(THIRDPARTY_OBJ_DIR)/lib -ldl
GST_VALIDATE_CFLAGS:=-I$(THIRDPARTY_OBJ_DIR)/include
else
#GST_VALIDATE_LDFLAGS:=$(OPENSOURCE_LDFLAGS) -L$(TOPDIR)/$(CFG_RT_PLATFORM_SDK_DYNAMIC_LIB_DIR) -ldl
GST_VALIDATE_LDFLAGS:=$(OPENSOURCE_LDFLAGS) -L$(THIRDPARTY_OBJ_DIR)/lib -L$(TOPDIR)/$(CFG_RT_PLATFORM_SDK_DYNAMIC_LIB_DIR)
GST_VALIDATE_CFLAGS:=$(foreach inc_tmp, $(CFG_RT_PLATFORM_SDK_INC_DIR), -I$(TOPDIR)/$(inc_tmp))
endif

$(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE):$(PRIVATE_PKG_GST_VALIDATE_NAME_PREPARE)
	$(NS)echo "begin configure $(PKG_GST_VALIDATE_NAME)..."
	chmod 777 $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/configure
	cd $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME);ac_cv_path_install="/usr/bin/install -cp" PKG_CONFIG_PATH=$(THIRDPARTY_PKG_CONFIG_DIR) ./configure --prefix="${THIRDPARTY_OBJ_DIR}" \
		--host=$(CFG_HOST_TYPE) \
		CFLAGS="$(PRIVATE_PKG_GST_VALIDATE_CFLAGS) $(GST_VALIDATE_CFLAGS) $(OPENSOURCE_CFLAGS) --sysroot=$(CFG_COMPILE_SYSROOT)"\
		GST_CFLAGS="$(PRIVATE_PKG_GST_VALIDATE_CFLAGS) $(GST_VALIDATE_CFLAGS) $(OPENSOURCE_CFLAGS) --sysroot=$(CFG_COMPILE_SYSROOT)"\
		GST_CHECK_CFLAGS="$(PRIVATE_PKG_GST_VALIDATE_CFLAGS) $(GST_VALIDATE_CFLAGS) $(OPENSOURCE_CFLAGS) --sysroot=$(CFG_COMPILE_SYSROOT)"\
		CPPFLAGS="$(PRIVATE_PKG_GST_VALIDATE_CXXFLAGS) $(OPENSOURCE_CXXFLAGS)" \
		--disable-static --enable-shared \
		$(PRIVATE_PKG_GST_VALIDATE_DBG_FLG) \
		--with-default-audiosink=$(CFG_AUDIOSINK_NAME) \
		--with-default-videosink=$(CFG_VIDEOSINK_NAME)\
		ZLIB_CFLAGS="$(CFG_ZLIB_CFLAGS)" ZLIB_LIBS="$(CFG_ZLIBS)" \
		LDFLAGS="$(GST_VALIDATE_LDFLAGS) -Wl,-rpath-link=$(THIRDPARTY_OBJ_DIR)/lib" LIBS="-lz -lgstreamer-1.0" \
		GST_LIBS="-lgstreamer-1.0 " \
		CXX=$(TARGET_CXX) CC=$(TARGET_CC)
		#$(PRIVATE_PKG_GST_VALIDATE_ALSA_FLG) \
		#--with-pkg-config-path=$(THIRDPARTY_PKG_CONFIG_DIR) \
		#PKG_CONFIG=$(THIRDPARTY_PKG_CONFIG_DIR) \
	#-cd $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/docs;sed -i "s/install: install-recursive/install:/g" `grep "install: install-recursive" -rl Makefile`
	#-cd $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)/po;sed -i "s/install: install-exec install-data/install:/g" `grep "install: install-exec install-data" -rl Makefile`
	$(NS)touch $@
	$(NS)echo "end configure $(PKG_GST_VALIDATE_NAME)..."

$(PRIVATE_PKG_GST_VALIDATE_NAME_PREPARE):
	$(NS)echo "begin prepare $(PKG_GST_VALIDATE_NAME)..."
	$(NC)rm -rf $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)
	$(NC)mkdir -p $(SME_THIRDPARTY_MERGE_DIR)
	tar -xf $(SME_THIRDPARTY_ORG_DIR)/../../../../../../third_party/open_source/$(PKG_GST_VALIDATE_NAME).$(EXT_TYPE_XZ) -C $(SME_THIRDPARTY_MERGE_DIR)
	$(NC)cp -af $(SME_THIRDPARTY_PATCH_DIR)/$(PKG_GST_VALIDATE_NAME) $(SME_THIRDPARTY_MERGE_DIR)/
	$(NS)touch $@
	$(NS)echo "end prepare $(PKG_GST_VALIDATE_NAME)!"

$(LOCAL_MODULE)-clean:
	$(NS)echo "begin make clean $(PKG_GST_VALIDATE_NAME) ..."
	$(NC)rm -rf $(TARGET_OUT_LIB_DIR)/libgstvalidate-*so*
	$(NC)rm -rf $(TARGET_OUT_PLUGIN_DIR)/libgstvalidate*.so*
	$(NC)rm -rf $(TARGET_OUT_BIN_DIR)/gst-validate-1.0
	$(NC)rm -rf $(TARGET_OUT_BIN_DIR)/gst-validate-launcher
	$(NC)rm -rf $(TARGET_OUT_CONFIG_DIR)/scenarios/
	#$(NC)make -C $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME) uninstall $(MAKE_PARALLEL)
	#$(NC)make -C $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME) clean $(MAKE_PARALLEL)
	$(NC)rm -rf $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)
	$(NS)echo "end make clean $(PKG_GST_VALIDATE_NAME)"

$(LOCAL_MODULE)-cfg-clean:
	$(NS)echo "begin make clean $(PKG_GST_VALIDATE_NAME)-cfg ..."
	$(NC)rm -rf $(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE)
	$(NS)echo "end make clean $(PKG_GST_VALIDATE_NAME)-cfg ..."

$(LOCAL_MODULE)-prepare-clean:$(LOCAL_MODULE)-clean
	$(NS)echo "begin make clean $(PKG_GST_VALIDATE_NAME)-prepare ..."
	$(NC)rm -rf $(PRIVATE_PKG_GST_VALIDATE_NAME_CONFIGURE)
	$(NC)rm -rf $(PRIVATE_PKG_GST_VALIDATE_NAME_PREPARE)
	$(NC)rm -rf $(SME_THIRDPARTY_MERGE_DIR)/$(PKG_GST_VALIDATE_NAME)
	$(NS)echo "end make clean $(PKG_GST_VALIDATE_NAME)-prepare ..."

include $(BUILD_OPENSOURCE_PKG)
